[
  {
    "objectID": "Mentoring.html",
    "href": "Mentoring.html",
    "title": "Mentoring Experience",
    "section": "",
    "text": "Elizabeth Bodenhamer - Senior Thesis\nUC Santa Barbara 2023\nUCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nKathryn Koo - Senior Thesis\nUC Santa Barbara 2023\nUCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nRachel Leowy - Senior Thesis\nUC Santa Barbara 2023\nUCSB Worster Fellow & UCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nSammi Yeung - Senior Thesis\nUC Santa Barbara 2023\n\n\n\n\n\nNuzha Baksh - Senior Thesis\nUC Santa Barbara 2022\nUCSB Schmidt Fellow & UCSB Gene & Susan Lucas Fellow\n\n\n\n\n\nMiranda Kosowsky - Senior Thesis\nUniversity of Pittsburgh 2021\n\n\n\n\n\nMadeline Bush - Internship Project\nUniversity of Pittsburgh 2021\n\n\n\n\n\nLily Turri - AP Biology Capstone\nAllderdice High School 2021\nPrincipal Mentor: Dr. Sebastian Echeverri"
  },
  {
    "objectID": "Mentoring.html#undergraduate-mentee-independent-research-projects",
    "href": "Mentoring.html#undergraduate-mentee-independent-research-projects",
    "title": "Mentoring Experience",
    "section": "",
    "text": "Elizabeth Bodenhamer - Senior Thesis\nUC Santa Barbara 2023\nUCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nKathryn Koo - Senior Thesis\nUC Santa Barbara 2023\nUCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nRachel Leowy - Senior Thesis\nUC Santa Barbara 2023\nUCSB Worster Fellow & UCSB Undergraduate Research & Creative Activities Fellow\n\n\n\n\n\nSammi Yeung - Senior Thesis\nUC Santa Barbara 2023\n\n\n\n\n\nNuzha Baksh - Senior Thesis\nUC Santa Barbara 2022\nUCSB Schmidt Fellow & UCSB Gene & Susan Lucas Fellow\n\n\n\n\n\nMiranda Kosowsky - Senior Thesis\nUniversity of Pittsburgh 2021\n\n\n\n\n\nMadeline Bush - Internship Project\nUniversity of Pittsburgh 2021\n\n\n\n\n\nLily Turri - AP Biology Capstone\nAllderdice High School 2021\nPrincipal Mentor: Dr. Sebastian Echeverri"
  },
  {
    "objectID": "Mentoring.html#mentees",
    "href": "Mentoring.html#mentees",
    "title": "Mentoring Experience",
    "section": "Mentees",
    "text": "Mentees\n\n\nEva Howell - UC Santa Barbara 2023 - Present\nOlivia Schroeder- UC Santa Barbara 2023 - Present\nJanna Ellman - UC Santa Barbara 2023 - Present\nEmily Nix - UC Santa Barbara 2023 - Present\nJasmine Tesoro - UC Santa Barbara 2023 - Present\nElizabeth Bodenhamer- UC Santa Barbara 2022 - 2023\nSammi Yeung - UC Santa Barbara 2022 - 2023\nKathryn Koo - UC Santa Barbara 2022 - 2023\nRachel Leowy - UC Santa Barbara 2022 - 2023\nHope Hahn - UC Santa Barbara 2022 - 2023\nNuzha Baksh - UC Santa Barbara 2021 - 2022\nLeann Hagen - UC Santa Barbara Fall 2021\nSarah Boyle - UC Santa Barbara Summer 2021\nLily Turri - University of Pittsburgh 2020 - 2021\nMadeline Bush - University of Pittsburgh 2020 - 2021\nAnna Meinzen - University of Pittsburgh 2020 - 2021\nMiranda Kosowsky - University of Pittsburgh 2020 - 2021\nJoshua Hickman - University of Pittsburgh 2019 - 2020"
  },
  {
    "objectID": "Mentoring.html#mentee-presentations",
    "href": "Mentoring.html#mentee-presentations",
    "title": "Mentoring Experience",
    "section": "Mentee Presentations",
    "text": "Mentee Presentations\n\n\nMay 2023 UC Santa Barbara UC Santa Barbara Undergraduate Research and Creative Activities Conference Panel: “Investigation into the effects of storage method and duration on detection of pathogenic Batrachochytrium dendrobatidis (Bd) environmental DNA (eDNA)” K.Koo, C.L. Nordheim, T.S. Katz, R. Chen, and C.J. Briggs.\nMay 2023 UC Santa Barbara Undergraduate Research and Creative Activities Poster Colloquim: “The Effects of Storage and Filtration Methods on eDNA Detection of Batrachochytrium dendrobatidis in Water” E. Bodenhamer, C.L. Nordheim, T.S. Katz and C.J. Briggs.\nMay 2023 UC Santa Barbara UC Santa Barbara Undergraduate Research and Creative Activities Poster Colloquim: “Elucidating the Ability of Invertebrates to Host and Shed Batrachochytrium dendrobatidis (Bd)” R. Loewy, C.L. Nordheim, and C.J. Briggs.\nApril 2023 UC Santa Barbara Ecology, Evolution, and Marine Biology Undergraduate Research Conference: “The Effects of Storage and Filtration Methods on eDNA Detection of Batrachochytrium dendrobatidis in Water” E. Bodenhamer, C.L. Nordheim, T.S. Katz and C.J. Briggs.\nApril 2023 UC Santa Barbara Ecology, Evolution, and Marine Biology Undergraduate Research Conference: “Investigation into the effects of storage method and duration on detection of pathogenic Batrachochytrium dendrobatidis (Bd) environmental DNA (eDNA)” K.Koo, C.L. Nordheim, T.S. Katz, R. Chen, and C.J. Briggs.\nApril 2023 UC Santa Barbara Ecology, Evolution, and Marine Biology Undergraduate Research Conference: “Macroinvertebrates as Potential Bd Reservoirs” S. Yeung, C.L. Nordheim, and C.J. Briggs.\nApril 2022 UC Santa Barbara Ecology, Evolution, and Marine Biology Undergraduate Research Conference: “Effects of elevated temperatures associated with urbanization on the Bd-zoospore grazing ability of Daphnia magna” N.N. Baksh, C.L. Nordheim, and C.J. Briggs.\nJuly 2021 American Arachnological Society Meeting: “Eye Size Reflects Habitat and Sex in Tarantulas” L.E.Turri, C.L. Nordheim, S. Foley, and S.A. Echeverri."
  },
  {
    "objectID": "Mentoring.html#mentee-research-fellowships",
    "href": "Mentoring.html#mentee-research-fellowships",
    "title": "Mentoring Experience",
    "section": "Mentee Research Fellowships",
    "text": "Mentee Research Fellowships\n\n\nUCSB Schmidt Fellowship - Olivia Schroeder 2023\nUCSB Schmidt Fellowship - Janna Ellman 2023\nUCSB URCA Research Grant - Elizabeth Bodenhamer 2022\nUCSB URCA Research Grant - Rachel Loewy 2022\nUCSB URCA Research Grant - Kathryn Koo 2022\nUCSB Worster Summer Research Fellowship - Rachel Loewy 2022"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "",
    "text": "By Caitlin Nordheim-Maestas\nYou can find more information on my GitHub Repository: https://github.com/cnordheim-maestas/thomas-fire-analyses.git"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#about",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#about",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "About",
    "text": "About\nWildfires can have dramatic impacts on both human health and the environment. Here, we will investigate some of the impacts of the Thomas Fire in Santa Barbara County, a fire that occurred in December 2017 and continued through mid January 2018. One impact of wildfires especially important to human health is the change in air quality. Air quality can be tracked through an Air Quality Index (AQI), which ranges from 0-500, with a higher value being worse air quality. For reference, an AQI below 50 is ideal, and above 100 is unhealthy for sensitive groups, and above 150 is unhealthy for non-sensitive groups. Wildfires can also have drastic impacts on vegetation and soil, especially their moisture levels. False color images are a very useful tool to visualize trends not obvious to the human eye, such as near infrared and shortwave infrared data. Here, we will make a False Color Image to view spatial trends around the Thomas Fire boundary.\n\nPurpose\nWe are looking into two important outcomes of the Thomas fire (1) how the fire impacted the air quality in Santa Barbara County, and (2) how the fire impacted the land in the area of the fire compared to the rest of the county. Specifically, we are looking into the Air Quality Index (AQI) across 2017 and 2018, calculating the rolling five-day average AQI, and visualizing how the AQI changed in relation to the fire by paying special attention to December 2017 and January 2018. We will look into the change in vegetation in the area impacted by the fire by creating a False Color Image of the surrounding spatial area to compare the short-wave infrared (swir22) and near-infrared values inside and outside of the fire boundary. The short-wave infrared values give an insight into the vegetation and soil moisture levels. We will plot the fire’s geographical boundary to make this comparison simple."
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#highlights-of-analyses",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#highlights-of-analyses",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "Highlights of analyses",
    "text": "Highlights of analyses\n\nImport and clean timeseries data using pandas\nCalculate a rolling average over a 5 day rolling window\nVisualize the average AQI and AQI readings over time, specifying colors using a dictionary\nImport and clean raster and shapefile data using rasterio and geopandas\nChange Coordinate Reference System (crs) to ensure the raster and shapefile match\nCreate a False Color Image by overlaying three variables of interest and the fire boundary shapefile\nCustomizing a plot using matplotlib’s pyplot and mpatches to create an aesthetically pleasing map and legend"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#dataset-descriptions",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#dataset-descriptions",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "Dataset descriptions",
    "text": "Dataset descriptions\n\nAQI Data:\n\nWe will use the Air Quality Index (AQI) data collected from the United States Environmental Protection Agency Air Data from 2017 and 2018. The AQI is calculated across the United States of America, and daily AQI summaries were calculated per County by the EPA. We will combine the 2017 and 2018 datasets, and select only the observations from Santa Barbara County in California for our analyses.\n\nLandsat Collection 2:\n\nTo create the false color image to elucidate any spatial patterns with the Thomas fire’s location, we will utilize the Landsat Collection 2 Level-2 data on atmospherically surface reflectance data. The data wass created and curated by United States Geological Survey in collaboration with the National Aeronautics and Space Administration’s Landsat Missions, collected by the Landsat 8 satellite and hosted by Microsoft Planetary Computer. We will be using data that was pre-processed in the Microsoft Planetary Computer by Dr. Carmen Galaz-Garcia to only include the land near the Thomas Fire and coarsen the data. The bands we will be using are: red, near-infrared (nir) and shortwave infrared (swir).\n\nCalifornia Fire Perimeters:\n\nThe Thomas fire perimeter is from the California Department of Forestry and Fire Protection. This is a shapefile with outlines of fire perimeters in California from 2017. We will overlay our False Color Image created with the LandSat data with the perimeter of the Thomas fire.\n\nData citations\nUnited States Environmental Protection Agency Air Data (2023), daily_aqi_by_cbsa_2017.zip [Data file] Available from: https://aqs.epa.gov/aqsweb/airdata/download_files.html#AQI. Access date: 11.27.2023.\nUnited States Geological Survey & National Aeronautics and Space Administration (2023), Landsat Collection 2 Level-2 [Data file] Available from: https://planetarycomputer.microsoft.com/dataset/landsat-c2-l2. Access date: 11.27.2023.\nCalifornia Department of Forestry and Fire Protection (2023), California Fire Perimeters (all) [Data file] Available from: https://gis.data.ca.gov/datasets/CALFIRE-Forestry::california-fire-perimeters-all-1/about. Access date: 11.27.2023."
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#contents",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#contents",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "Contents",
    "text": "Contents\n\nAQI Timeseries Analysis\n\n\n1A: AQI Data Preparation: AQI Data Access, Cleaning, Exploration\n1B: AQI Data Analysis\n\n\nFalse Color Image Spatial Analysis\n\n\n2A: LandSat & Fire Boundaries Data Preparation: Data Access and Cleaning\n2B: LandSat & Fire Boundaries Data Exploration\n\n\nFinal Outputs\n\n\n3A: AQI Visualization\n3B: False Color Image Visualization"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#aqi-timeseries-analysis",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#aqi-timeseries-analysis",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "1. AQI Timeseries Analysis",
    "text": "1. AQI Timeseries Analysis\n\n1A: AQI Data Preparation: AQI Data Access, Cleaning, Exploration\nHere, we will load in the library needed for the AQI analysis and plotting, pandas. We will import the AQI data from two separate links using the read.csv function.\nNext, we will clean the AQI datasets by combining the two datasets using the pandas concat function to concatenate the 2017 and 2018 data together, and check that it worked by printing the length of the concatenated dataset. We’ll clean the combined dataset by making the column names in “snake_case”, lowercase and separated by underscores. Next, we need to subset only the data from Santa Barbara county, using the loc to subset, and drop unneeded column names, since we no longer have multiple states or counties.\nNow we are ready to prep the data for proper timeseries work! The date column was initially in a string, but we convert it to a datetime using the to_datetime function. Then, we update the index of the dataframe to be the date column in the datetime format, since that is most conducive to the upcoming timeseries calculations.\nWe will explore our nicely cleaned AQI dataset by using the .min() and .max() functions in combination with a print statement to print the range of the data, average, and do an exploratory plot. This exploratory plot looks great using only the “.plot()” code because we previously set the index as the date in the proper datetime format. There is additional (commented out) code using the .info() function to see the datatypes, number of entries, and timeframe in the datetime index; the output was removed for simplicity.\n\n\nCode\n# Import libraries and functions\nimport pandas as pd # data manipulation & analysis\n\n# import AQI 2017 data\n# using the pandas read_csv function\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip')\n\n# import AQI 2018 data\n# using the pandas read_csv function\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip')\n\n# --------------------------------\n# Data cleaning \n\n# AQI data cleaning\n# glue the 2017 and 2018 files together using concatenate\naqi = pd.concat([aqi_17, aqi_18])\n# is the sum of the length of both data files the same as the length of the of cancatenated file?\nprint('Concatenate worked?:',  (len(aqi_17) + len(aqi_18)) == len(aqi))\n\n# clean column names: make all lower case and replace spaces with underscores\naqi.columns = aqi.columns.str.lower().str.replace(' ','_')\n# print('updated column names (checking for snake_case): ', aqi.columns.values, '\\n') # uncomment to confirm updated column names\n\n## Geographical context: Santa Barbara only\n# subset Santa Barbara: select rows where the county_name is santa barbara only\naqi_sb=aqi.loc[aqi.county_name==\"Santa Barbara\"]\n# check it worked: is the only county Santa Barbara?\nprint('Subset worked?:', 'Santa Barbara' == aqi_sb.county_name.unique())\n\n## More data cleaning\n# drop unecessary columns from subset: drop 'state_name', 'county_name', 'state_code' and 'county_code' columns\naqi_sb = aqi_sb.drop(columns=['state_name', 'county_name', 'state_code','county_code'])\n# print('updated column names in sb subset: ', aqi_sb.columns.values, '\\n') # uncomment to confirm updated column names\n\n# convert date column from string to timestamps\naqi_sb.date = pd.to_datetime(aqi_sb.date)\n# expecting a datetime, check:\nprint('Datetime worked?:', 'datetime64[ns]' == aqi_sb.date.dtypes)\n\n# set date coumn as index\naqi_sb = aqi_sb.set_index('date')\n\n# --------------------------------\n# Data Exploration\n\n# AQI data\n# Let's explore the cleaned aqi data, that just has Santa Barbara, and includes 2017 and 2018\n\n# let's look at the range of the AQI values\nprint('The range of AQI values is: ', aqi_sb.aqi.min(), '-', aqi_sb.aqi.max())\n\n# let's look at the average AQI\nprint('The average AQI value is: ', aqi_sb.aqi.mean())\n\n# exploratory plot\naqi_sb.plot(title=\"Exploratory plot of SB AQI dataset\")\n\n# optional data exploration: use the .info() function to see the datatypes, number of entries, and timeframe in the datetime index\n# print(aqi_sb.info()) #uncomment to explore this\n\n\nConcatenate worked?: True\nSubset worked?: [ True]\nDatetime worked?: True\nThe range of AQI values is:  20 - 281\nThe average AQI value is:  51.345205479452055\n\n\n&lt;AxesSubplot:title={'center':'Exploratory plot of SB AQI dataset'}, xlabel='date'&gt;\n\n\n\n\n\n\n\n1B: AQI Data Analysis\nNow we can dive into analysis! Remember, one of our goals was to determine if and how the AQI changes through time 2017-2018. We will look at both the raw AQI data, and calculate a five-day rolling average of the AQI, to reveal longer-term trends. So, we need a new column in our dataset with the five day rolling average. The rolling average is calculated by the .rolling() function following the column we want to calculate, aqi, where we specify five days by inputting “5D” in the parentheses, followed by what we want to calculate, which is the average, so we add on the .mean() function. To put this in a new column, we use the syntax df['new column name'] on the left hand side. Again, this works so seamlessly because we have our dataset set up with the datetime as the index!\nOnce the rolling average is calculated, we will check that it worked by printing the column names to check the new one is there, and print the range of the new column as we did above.\n\n\nCode\n# Analysis: calculate the 5-day rolling average and add it as a column\n\n# add column with 5 day average AQI and calculate the 5 day rolling average using the \"rolling\" function\n# '5D' corresponds to 5 day\n# .mean() because we want the average\n# adding a column using the syntax on the left\n\naqi_sb['five_day_average'] = aqi_sb.aqi.rolling('5D').mean()\n\n# let's check that it worked! \n# print('updated column names (checking the five_day_average showed up): ', aqi_sb.columns.values, '\\n') # uncomment to confirm updated column names\n\n# let's check the range of average values\nprint('The range of AQI 5-day average values is: ', aqi_sb.five_day_average.min(), '-', aqi_sb.five_day_average.max(), '\\n')\n\n\nThe range of aqi 5-day average values is:  30.4 - 199.2"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#false-color-map-spatial-analysis",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#false-color-map-spatial-analysis",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "2: False Color Map Spatial Analysis",
    "text": "2: False Color Map Spatial Analysis\n\n2A: LandSat and Fire Perimeter Data Access & Cleaning\nFor the spatial part of our analysis, we will need far more libraries and functions loaded, see the comments in the code for a brief description of their purpose here. We will load in our data using the os library, because it helps file paths work more universally. Loading in data using os requires a file pathname, which we will call “fire_fp” for the fire boundary filepath, and “land_fp” for land filepath, directing us to our data in the data folder. We will import the fire boundary data shapefile data, also using the ospathname. Because it is a shapefile, we will open the data using the geopandaslibrary function gpd.read_file and input our filepath. We can open our landsat raster data using rasterio.\nNext, it is time to clean our raster files and shapefiles. The raster file requires reduction, it just has one band, which isn’t necessary, so we will use the .squeeze() function to remove the band, and the .drop('band') to remove the coordinates associated with the band, to end up with a reduced raster with out the band, which we will check by printing the dims (number of dimmensions) and coords (coordinates). The fire boundaries shapefile will need to be in the same coordinate reference system as the raster, which we can reproject using the to_crs() function. Here, we will direct to the desired crs by pulling the crs from the raster file. This needs to be done using the .rio accessor before specifying that we want the .crs from the land raster. We will save the reprojected fire boundaries shapefile as a new file to aid in the data exploration further below. To finish the crs, we will check that the reprojected shapefile and raster crs’ match.Next we will subset to the proper geographical context, the boundary of the Thomas Fire. This will be done by specifying that we only want data where the values in the “FIRE_NAME” column are “THOMAS”.\n\n\nCode\n# Import libraries and functions\nimport os # accessible file paths\nimport pandas as pd # data manipulation & analysis\nimport geopandas as gpd # geospatial data manipulation\nimport rioxarray as rioxr # for geospatial n-dimmensional array data\nimport matplotlib.pyplot as plt # for plotting\nimport matplotlib.patches as mpatches # for pretty legends\n\n# ---------------------------\n# Data Access\n\n# Import fire perimeters in California during 2017 using geopandas\n# use the os to get the current working directory\nfire_fp = os.path.join(os.getcwd(),'data','California_Fire_Perimeters_2017','California_Fire_Perimeters_2017.shp')\nfire = gpd.read_file(fire_fp) # use gpd to read the file because it's a shapefile\n\n# import landsat data using rasterio \n# use the os to get the current working directory\nland_fp = os.path.join(os.getcwd(),'data','landsat8-2018-01-26-sb-simplified.nc')\nland = rioxr.open_rasterio(land_fp) # use this for geospatial raster data\n# land # uncomment to explore the raster\n\n# ---------------------------\n# Data cleaning\n\n# Landsat data cleaning\n# Raster reduction: drop the uneeded band in land data\nprint(f\"Before squeeze: dimensions {land.dims}\") # note the extra band\n# remove length 1 dimension (band) using squeeze and remove coordinates associated to band\nland = land.squeeze().drop('band')\nprint(f\"After squeeze: dimensions {land.dims}\") # note the extra band is gone!\n\n# Fire perimeters data cleaning: Geographical context: Only the Thomas Fire\n# make sure CRS' match\nfire_reprojected = fire.to_crs(land.rio.crs) # change to the land crs, note the rio accessor for the raster file\nprint('matched crs?',  fire_reprojected.crs == land.rio.crs) # ensure they match\n\n# subset only thomas fire\nthomas_fire = fire_reprojected[(fire_reprojected.FIRE_NAME=='THOMAS')]\n# check it worked: is the only fire Thomas?\nprint('Fire subset worked?:', 'THOMAS' == thomas_fire.FIRE_NAME.unique(), '\\n')\n\n\nBefore squeeze: dimensions Frozen({'y': 731, 'x': 870, 'band': 1})\nAfter squeeze: dimensions Frozen({'y': 731, 'x': 870})\nmatched crs? True\nFire subset worked?: [ True] \n\n\n\n\n\n2B: LandSat & Fire Boundaries Data Exploration\nWe will explore our cleaned raster file and shapefile next. We will do this by printing relevant information to the files rather than opening up the files. Note that we will use the .rio accessor to get the raster information.\nIn our LandSat raster fie, we will look at the: - Coordinate reference system - Height and width - Spatial bounding box\nIn our Thomas Fire shapefile, we will explore: - Coordinate reference system before and after the reprojection - Number of fires in the original fire boundary dataset vs the number of fires in the Thomas fire subset - Exploratory plot of the original fire boundaries dataset and the Thomas fire subset (using matplotlib’s pyplot and mpatches)\n\n\nCode\n# Landsat data exploration\n# check crs, height, width, bounding box\nprint('Landsat data CRS: ', land.rio.crs)\nprint('Landsat data height:', land.rio.height, ' & width:', land.rio.width)\n\nprint('Landsat data spatial bounding box: ')\nprint(land.rio.bounds(), '\\n')\n\n# Fire perimeters data exploration\n# check original crs and updated crs:\nprint('Fire perimeter data original crs: ',  fire.crs) \nprint('Updated Fire perimeter matches LandSat crs?',  land.rio.crs == thomas_fire.crs, '\\n') # ensure they match\n\n# let's get some info on how many fires there were before clipping\nprint('Fire perimeter data original number of fire names included: ',  fire.FIRE_NAME.nunique())\nprint('Updated Fire perimeter data number of fire names included: ',  thomas_fire.FIRE_NAME.nunique(), '\\n')\n\n# exploratory plot:\n# exploratory plot of fire boundaries\nfig, ax= plt.subplots() # sets up the axis for the plots\nax.axis('off') # remove the pesky axis box\n\n#----------------------------------\n# all 2017 fires boundaries\nfire_reprojected.plot(ax=ax, edgecolor='red', facecolor=\"red\") # blue edge color and no fill\n# make legend pretty\nbbox_patch = mpatches.Patch(color='red', label = 'All 2017 CA Fire Boundaries') # make a patch for the legend that is blue and labeled\n\n#----------------------------------\n# thomas fire boundary\nthomas_fire.plot(ax=ax, edgecolor='blue', facecolor=\"none\") # blue edge color and no fill\n# make legend pretty\nbbox2_patch = mpatches.Patch(color='blue', label = 'Thomas Fire Boundary') # make a patch for the legend that is blue and labeled\n\n# create a legend\nax.legend(handles = [bbox_patch, bbox2_patch], loc='lower right') # add in my match from earlier and put the legend cemented to the upper right\n\n# add a title\nax.set_title('Exploratory plot showing fire boundaries', fontsize=20) # make the fontside bigger\n\nplt.show() # show the plot\n\n\nLandsat data CRS:  EPSG:32611\nLandsat data height: 731  & width: 870\nLandsat data spatial bounding box: \n(121170.0, 3755160.0, 356070.0, 3952530.0) \n\nFire perimeter data original crs:  epsg:3857\nUpdated Fire perimeter matches LandSat crs? True \n\nFire perimeter data original number of fire names included:  520\nUpdated Fire perimeter data number of fire names included:  1"
  },
  {
    "objectID": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#final-outputs",
    "href": "blog/eds-220-final-blog/thomas-fire-analyses-nordheim-maestas.html#final-outputs",
    "title": "Thomas Fire Analysis: AQI and False Color Image",
    "section": "3: Final outputs",
    "text": "3: Final outputs\n\n3A: AQI Data Visualization\nNext, it is time to make a timeseries plot of AQI values across time! We will specify our custom colors for the plot using a dictionary and assigning the hex code of the colors we want to each variable. To complete the plot, we will specify our arguments in the .plot() function, and specify that we want both the aqi and the rolling average, and add a plot title, x and y labels, and call in the color dictionary to specify our colors.\n\n\nCode\n# AQI through time\n# set plot colors using dictionary\ncolor = {'aqi':'#1e81b0',\n                 'five_day_average': '#eab676'\n                 }\n# cleate plot\naqi_sb.plot(y=['aqi', 'five_day_average'], # list of column names\n        title = 'AQI and Five-Day-Average AQI in Santa Barbara County', # update title\n        xlabel='Date',\n        ylabel='AQI',\n        color=color # name of colors dictionary\n        )\n\n\n&lt;AxesSubplot:title={'center':'AQI and Five-Day-Average AQI in Santa Barbara County'}, xlabel='Date', ylabel='AQI'&gt;\n\n\n\n\n\n\n\n3B: False Color Image Visualization\nWe are plotting the short wave infrared band, the near infrared band, and the red band for this false color image. The USGS has a very useful resource for which bands may be best for your research, found here: https://www.usgs.gov/faqs/what-are-best-landsat-spectral-bands-use-my-research.\nThe bands we are using and and justifications are: - swir22: to visualize soiland vegetation moisture - nir08: to put emphasis on biomass content - red: to visualize vegetation slopes\nWe will build our false color image using a relatively long line of code, so let’s break this down:\nland[['swir22','nir08','red']].to_array().plot.imshow(robust=True)\nWhere: - land is our raster file - [['swir22','nir08','red']].to_array() selects our three variables of interest and makes them an array using the to_array() - .plot.imshow() creates the image we plan to plot - (robust=True) is used to cut the extreme data from the analyses and only plot the 2nd - 98th percentile. This ensures the extreme data can’t distort our plot\nNext, we can add in the Thomas fire boundary shapefile. Note this works because we have it in the case coordinate reference system!\nWe will also customize our plot, and plot using matplotlib’s pyplot and mpatches to make this fancy plot and legend. See the annotated code for details on each function and argument:\n\n\nCode\n# False color image:\nfig, ax= plt.subplots() # sets up the axis for the plots\nax.axis('off') # remove the pesky axis box\n\n#----------------------------------\n# False color image\nland[['swir22','nir08','red']].to_array().plot.imshow(robust=True, ax=ax) # see markdown above for explanation of this code\n#----------------------------------\n# thomas fire boundary\nthomas_fire.plot(ax=ax, edgecolor='blue', facecolor=\"none\") # blue edge color and no fill\n# make legend pretty\nbbox_patch = mpatches.Patch(color='blue', label = 'Thomas Fire Boundary') # make a patch for the legend that is blue and labeled\n\n#----------------------------------\n# create a legend\nax.legend(handles = [bbox_patch], loc='upper right') # add in my match from earlier and put the legend cemented to the upper right\n\n# add a title\nax.set_title('False Color Image showing Thomas Fire Boundary', fontsize=20) # make the fontside bigger\n\nplt.show() # show the plot"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Caitlin Nordheim-Maestas",
    "section": "",
    "text": "I’m Caitlin Nordheim-Maestas! I’m a third-year Ph.D. student who is especially passionate about wildlife conservation, disease ecology, and undergraduate research mentorship.\nI am in the Briggs Lab at UC Santa Barbara studying amphibian disease ecology, specifically, the “chytrid fungus” Batrachochytrium dendrobatidis, in California."
  },
  {
    "objectID": "index.html#hello",
    "href": "index.html#hello",
    "title": "Caitlin Nordheim-Maestas",
    "section": "",
    "text": "I’m Caitlin Nordheim-Maestas! I’m a third-year Ph.D. student who is especially passionate about wildlife conservation, disease ecology, and undergraduate research mentorship.\nI am in the Briggs Lab at UC Santa Barbara studying amphibian disease ecology, specifically, the “chytrid fungus” Batrachochytrium dendrobatidis, in California."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Caitlin Nordheim-Maestas",
    "section": "Education",
    "text": "Education\nB.S. Biology, The University of Tampa (2015)\nPh.D. Ecology, Evolution & Marine Biology, UC Santa Barbara (2021 - Present)"
  },
  {
    "objectID": "Research.html",
    "href": "Research.html",
    "title": "Research",
    "section": "",
    "text": "Coming soon!"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html",
    "href": "blog/2023-10-23-my-first-post/index.html",
    "title": "My first blog post",
    "section": "",
    "text": "I learned how to make citations in a blog; my most recent publication was (McMahon et al. 2023)."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#this-is-my-first-section",
    "href": "blog/2023-10-23-my-first-post/index.html#this-is-my-first-section",
    "title": "My first blog post",
    "section": "",
    "text": "I learned how to make citations in a blog; my most recent publication was (McMahon et al. 2023)."
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#this-is-my-second-section",
    "href": "blog/2023-10-23-my-first-post/index.html#this-is-my-second-section",
    "title": "My first blog post",
    "section": "This is my second section",
    "text": "This is my second section\nText1 will go here! More info will go here!2"
  },
  {
    "objectID": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "href": "blog/2023-10-23-my-first-post/index.html#footnotes",
    "title": "My first blog post",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is my first footnote↩︎\nThis is an inline footnote here↩︎"
  },
  {
    "objectID": "Blog.html",
    "href": "Blog.html",
    "title": "Blog",
    "section": "",
    "text": "Thomas Fire Analysis: AQI and False Color Image\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nMy first blog post\n\n\n\n\n\n\n\nQuarto\n\n\nMEDS\n\n\nWorkshop\n\n\n\n\nPlaying with making a blog on a Quarto website\n\n\n\n\n\n\nOct 23, 2023\n\n\nCaitlin Nordheim-Maestas\n\n\n\n\n\n\nNo matching items"
  }
]