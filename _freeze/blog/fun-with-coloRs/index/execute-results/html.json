{
  "hash": "3be1b4047a18afcbc71239ad19e56132",
  "result": {
    "markdown": "---\ntitle: \"Making R moRe fun with coloR\"\ndescription: \"A walkthrough and examples of some of my favorite color palettes and customizing colors in ggplot graphs in R. Preview: la cRiox, tayloRswift, national parks palettes, and more\"\nauthor:\n  - name: Caitlin Nordheim-Maestas\n    url: https://cnordheim-maestas.github.io/\n    affiliation: Graduate student in Ecology, Evolution & Marine Biology Department at University of California, Santa Barbara\ndate: 5-15-2023\ncategories: [data-vis, Undergrad-researchers] # self-defined categories\ncitation: \n  url: https://cnordheim-maestas.github.io//blog/fun-with-coloRs/ \nimage: IMG_8797.jpeg\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\n# Intro\n\nOne thing that I've learned quickly as a Teaching Assistant and research mentor in statistics and data visualization is that playing with color and customization is a great way to add personality and fun to coding! Without fail, the energy in the room always brightens when we introduce these concepts, but we often do not have time in class to go into depth on color palettes, color customization of different ggplot objects, and other fun ways to add some sparkle to your data visualization.\n\nNote that these are just a few of my favorites, and there is a whole world of color palettes out there for so many interests! I hope this post gives enough background for you to explore and find your favorites too, and make your coding and graphing journey a bit more fun.\n\n# Resources\n\n-   Sam Csik's [color lecture](https://samanthacsik.github.io/EDS-240-data-viz/course-materials/week5.html) from her [Data Visualization & Communication course](https://samanthacsik.github.io/courses/eds-240-data-viz/) in the Masters of Environmental Data Science program at UC Santa Barbara.\n\n-   \n\n# Let's get coding!\n\n## Load libraries\n\nNote: you may need to install these if they are new to you - run `install.packages\"packagename_here\"` to install\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # data wrangling, and includes ggplot\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(paletteer) # package with a lot of color palettes\nlibrary(lterdatasampler) # data I will be using to show off the colors\n```\n:::\n\n\n## Paleteer\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}