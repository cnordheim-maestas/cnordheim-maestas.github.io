{
  "hash": "644e0cf8cb036568df372fd55fa55301",
  "result": {
    "markdown": "---\ntitle: \"Color Palettes in R: Making R more fun!\"\ndescription: \"A walkthrough and examples of some of my favorite color palettes and customizing colors in ggplot graphs in R\"\nauthor:\n  - name: Caitlin Nordheim-Maestas\n    url: https://cnordheim-maestas.github.io/\n    # affiliation: Graduate student in Ecology, Evolution & Marine Biology Department at University of California, Santa Barbara\ndate: 5-15-2023\ncategories: [data-vis, Undergrad-researchers] # self-defined categories\n# citation: \n#   url: https://cnordheim-maestas.github.io//blog/fun-with-coloRs/ \nimage: IMG_8797.jpeg\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n---\n\n\n# Intro\n\nOne thing that I've learned quickly as a Teaching Assistant and research mentor in statistics and data visualization is that playing with color and customization is a great way to add personality and fun to coding! Without fail, the energy in the room always brightens when we introduce these concepts, but we often do not have time in class to go into depth on color palettes, color customization of different ggplot objects, and other fun ways to add some sparkle to your data visualization.\n\nNote that these are just a few of my favorites, and there is a whole world of color palettes out there for so many interests! I hope this post gives enough background for you to explore and find your favorites too, and make your coding and graphing journey a bit more fun.\n\n# Let's get coding!\n\nBuild base plots & load libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # data wrangling, and includes ggplot\nlibrary(paletteer) # package with a lot of color palettes\nlibrary(lterdatasampler) # data I will be using to show off the colors\n\n# base plot\nbase_plot <- and_vertebrates %>%\n  filter(species == \"Coastal giant salamander\") %>% \n  ggplot(aes(x = sitecode, y = log(weight_g), fill = sitecode)) + # fill the boxes by the variable station\n  geom_boxplot() + # make a boxplot\n  labs(y = \"Coastal giant salamander mass (log-g)\", x= \"Site Code\") +\n  guides(fill = FALSE) + # remove legend\n  theme_minimal() \n\nbase_plot_scatter <- and_vertebrates %>%\n  filter(species == \"Coastal giant salamander\") %>% \n  ggplot(aes(x = length_1_mm, y = weight_g, color = sitecode)) + # color by the variable station\n  geom_point() + # make a boxplot\n  labs(x = \"Coastal giant salamander length (mm)\", y= \"Coastal giant salamander mass (g)\") +\n  xlim(100,150) +\n  guides(fill = FALSE) + # remove legend\n  theme_minimal() \n\n# base plot\nbase_plot_twoboxes <- and_vertebrates %>%\n  filter(species == \"Coastal giant salamander\" | species == \"Cascade torrent salamander\") %>% \n  ggplot(aes(x = species, y = log(weight_g), fill = species)) + # fill the boxes by the variable station\n  geom_boxplot() + # make a boxplot\n  labs(y = \"Mass (log-g)\", x= \"Species\") +\n  guides(fill = FALSE) + # remove legend\n  theme_minimal() \n```\n:::\n\n\n## Taylor Swift Album Covers\n\nFirst, let's use the direct color palette package, you can learn more at the package's github:\n{{< fa brands github >}} [asteves tayloRswift github repository](https://github.com/asteves/tayloRswift)\n\nImportant note: there are 2 functions: one for **fill**: `scale_fill_taylor` and one for **color**: `scale_color_taylor`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(c(\"tayloRswift\"))\nlibrary(tayloRswift) \n\n# Let's start with the album Lover\nbase_plot +\n  scale_fill_taylor(palette = \"lover\", guide = \"none\") +\n  ggtitle(\"Lover Color Palette from tayloRswift Package\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nNow, we can try using the paleteer package to load in the palette (no need to install and load `library(tayloRswift)`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_plot_scatter +\n  scale_color_manual(values = paletteer_d(\"tayloRswift::taylor1989\")) +\n  ggtitle(\"1989 Color Palette from tayloRswift Package\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nBut, what if I want to choose a couple specific colors from the HEX codes? I can use the `paleteer_d` function to see the HEX codes for each palette\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's check out Evermore\npaletteer_d(\"tayloRswift::midnights\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<colors>\n#586891FF #8897A4FF #B3A6A3FF #2B152CFF #F1F3F2FF \n```\n:::\n\n```{.r .cell-code}\n# Let's say I only want the two of the colors, I can make a new object with the HEX codes output above\n\nmy_colors <- c(\"#B3A6A3FF\", \"#586891FF\")\n\n# Now I can specify these as the colors in my plot\nbase_plot_twoboxes +\n  scale_fill_manual(values = my_colors) +\n  ggtitle(\"Selected colors from Midnights palette from tayloRswift Package\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## La Croix Colors\n\nYou can learn more at the package's github: {{< fa brands github >}} [johannesbjork LaCroixColoR github repository](https://github.com/johannesbjork/LaCroixColoR)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's start with Pamplemousse\n\n# see the hex codes\npaletteer::paletteer_d(\"LaCroixColoR::Pamplemousse\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<colors>\n#EA7580FF #F6A1A5FF #F8CD9CFF #1BB6AFFF #088BBEFF #172869FF \n```\n:::\n\n```{.r .cell-code}\nbase_plot +\n  paletteer::scale_fill_paletteer_d(\"LaCroixColoR::Pamplemousse\") + # NOTE: fill for the boxplot\n  ggtitle(\"La Criox Pamplemousse Palette from LaCroixColoR Package\") +\n  \n  # for fun, let's make the axes text the colors too\n  theme(axis.title = element_text(color = \"#172869FF\"),\n        axis.text = element_text(color = \"#EA7580FF\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Now let's do Lemon with a scatterplot\n\n# see the hex codes\npaletteer::paletteer_d(\"LaCroixColoR::Lemon\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<colors>\n#F7AA14FF #F5D000FF #F7E690FF #1BB6AFFF #088BBEFF #172869FF \n```\n:::\n\n```{.r .cell-code}\nbase_plot_scatter +\n  paletteer::scale_color_paletteer_d(\"LaCroixColoR::Lemon\") + # NOTE: color for the points\n  ggtitle(\"La Criox Lemon Palette from LaCroixColoR Package\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\n# Resources\n\n-   Sam Csik's [color lecture](https://samanthacsik.github.io/EDS-240-data-viz/course-materials/week5.html) from her [Data Visualization & Communication course](https://samanthacsik.github.io/courses/eds-240-data-viz/) in the Masters of Environmental Data Science program at UC Santa Barbara.\n\n-   An Bui's Data Visualization Workshop from her [Stastics for Environmental Studies Course](https://an-bui.com/teaching/02_envs-193ds/) in the Environmental Studies program at UC Santa Barbara.\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}